// <auto-generated /> // Indica que este archivo ha sido generado automáticamente.
using DependencyInjection.Context; // Importa el espacio de nombres del contexto de la base de datos.
using Microsoft.EntityFrameworkCore; // Importa el espacio de nombres para Entity Framework Core.
using Microsoft.EntityFrameworkCore.Infrastructure; // Importa el espacio de nombres para la infraestructura de EF Core.
using Microsoft.EntityFrameworkCore.Metadata; // Importa el espacio de nombres para los metadatos de EF Core.
using Microsoft.EntityFrameworkCore.Storage.ValueConversion; // Importa el espacio de nombres para las conversiones de valores.

#nullable disable // Deshabilita la anotación de nulabilidad para compatibilidad con código antiguo o específico.

namespace DependencyInjection.Migrations // Define el espacio de nombres para las migraciones.
{
    [DbContext(typeof(CountryDbContext))] // Asocia este modelo de instantánea con el DbContext 'CountryDbContext'.
    partial class CountryDbContextModelSnapshot : ModelSnapshot // Define una clase parcial 'CountryDbContextModelSnapshot' que hereda de 'ModelSnapshot'.
    {
        protected override void BuildModel(ModelBuilder modelBuilder) // Método para construir el modelo de la base de datos.
        {
#pragma warning disable 612, 618 // Desactiva ciertas advertencias de compilador dentro de esta sección de código.
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30") // Anotación para la versión del producto.
                .HasAnnotation("Relational:MaxIdentifierLength", 128); // Anotación para la longitud máxima del identificador relacional.

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1); // Configura el uso de columnas de identidad en SQL Server.

            modelBuilder.Entity("DependencyInjection.Domain.Country", b => // Configura la entidad 'Country'.
            {
                b.Property<string>("Id") // Define la propiedad 'Id' de la entidad 'Country'.
                    .HasColumnType("nvarchar(450)"); // Configura el tipo de columna SQL para 'Id'.

                b.Property<string>("Name") // Define la propiedad 'Name' de la entidad 'Country'.
                    .IsRequired() // Configura que 'Name' es requerido.
                    .HasColumnType("nvarchar(max)"); // Configura el tipo de columna SQL para 'Name'.

                b.HasKey("Id"); // Configura la clave primaria de la entidad 'Country'.

                b.ToTable("Countries"); // Configura el nombre de la tabla para la entidad 'Country'.

                b.HasData( // Inserta datos iniciales en la tabla 'Countries'.
                    new
                    {
                        Id = "1",
                        Name = "Argentina"
                    },
                    new
                    {
                        Id = "2",
                        Name = "Francia"
                    },
                    new
                    {
                        Id = "3",
                        Name = "Brasil"
                    },
                    new
                    {
                        Id = "4",
                        Name = "Chile"
                    },
                    new
                    {
                        Id = "5",
                        Name = "Paraguay"
                    });
            });
#pragma warning restore 612, 618 // Restaura las advertencias de compilador desactivadas.
        }
    }
}
